<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<window name='EVEBot'>
		<Visible>1</Visible>
		<BackGroundColor></BackGroundColor>
		<Border>0</Border>
		<X>200</X>
		<Y>300</Y>
		<Width>500</Width>
		<Height>326</Height>
		<Title>EVEBot Options</Title>
		<TitleBar template='EVESkin.Window.TitleBar'>
			<Width>100%</Width>
			<Height>20</Height>
			<Border>0</Border>
			<Children>
				<commandbutton name='Run EVEBot' template='EVESkin.Window.TitleBar.RunButton'>
					<OnLeftClick>
						Script[EVEBot]:Resume
						Script[EVEBot].VariableScope.play:Set[TRUE]
						Echo EVEBot: Resume
					</OnLeftClick>
				</commandbutton>
				<commandbutton name='Pause EVEBot' template='EVESkin.Window.TitleBar.PauseButton'>
					<OnLeftClick>
						EVE:Execute[CmdStopShip]
						Script[EVEBot]:Pause
						Script[EVEBot].VariableScope.play:Set[FALSE]
						Echo EVEBot: Paused
					</OnLeftClick>
				</commandbutton>
				<text name='EVEBot_TitleBar_Title' template='EVESkin.Font.TitleBar'>
					<X>200</X>
					<Y>3</Y>
					<Width>120</Width>
					<Height>20</Height>
					<Text>${Script[EVEBot].VariableScope.Version}</Text>
				</text>				
				<button	Name='Minimize'	template='EVESkin.Window.TitleBar.Minimize'>
					<OnLeftClick>
						UIElement[EVEBot].FindUsableChild[TitleBotStatus,text]:Show
						UIElement[EVEBot].FindUsableChild[TitleBotStatusCap,text]:Show
						UIElement[EVEBot].FindUsableChild[TitleBotXPStatus,text]:Show
						UIElement[EVEBot].FindUsableChild[TitleBotXPCap,text]:Show
					</OnLeftClick>
				</button>
				<button	Name='Maximize'	template='EVESkin.Window.TitleBar.Minimize'>
					<OnLeftClick>
						UIElement[EVEBot].FindUsableChild[TitleBotStatus,text]:Hide
						UIElement[EVEBot].FindUsableChild[TitleBotXPStatus,text]:Hide
						UIElement[EVEBot].FindUsableChild[TitleBotXPCap,text]:Hide
						UIElement[EVEBot].FindUsableChild[TitleBotStatusCap,text]:Hide
					</OnLeftClick>
				</button>
				<button	Name='Close' template='EVESkin.Window.TitleBar.Close'>
					<OnLeftClick>
						endscript EVEBot
					</OnLeftClick>
				</button>
			</Children>
		</TitleBar>
		<Children name="EVEBot_Children">
			<TabControl	Name='EVEBotOptionsTab' template='EVESkin.TabControl'>
				<X>0</X>
				<Y>4</Y>
				<Width>100%</Width>
				<Height>100%</Height>
				<Tabs>
					<Tab Name='Status'>
							<text name='script_runtime'>
								<X>10</X>
								<Y>10</Y>
								<Width>115</Width>
								<Height>20</Height>
								<Text>Script Runtime:</Text>
							</text>
							<Text name='script_runtime_data' template='EVESkin.Font.Value'>
								<X>150</X>
								<Y>10</Y>
								<Width>100</Width>
								<Height>20</Height>	
								<Text>${Script[EVEBot].VariableScope.UI.Runtime}</Text>
							</Text>

							<text name='state' template='EVESkin.Font.Description'>
								<X>10</X>
								<Y>25</Y>
								<Width>100</Width>
								<Height>20</Height>
								<Text>Action:</Text>
							</text>
							<text name='state_data' template='EVESkin.Font.Value'>
								<X>150</X>
								<Y>25</Y>
								<Width>100</Width>
								<Height>20</Height>
								<text>${Script[EVEBot].VariableScope.Config.Common.BotModeName}</text>
							</text>
							<text name='Trips' template='EVESkin.Font.Description'>
								<X>10</X>
								<Y>40</Y>
								<Width>100</Width>
								<Height>20</Height>
								<Text>Runs this Session:</Text>
							</text>
							<text name='Trips_Data' template='EVESkin.Font.Value'>
								<X>150</X>
								<Y>40</Y>
								<Width>100</Width>
								<Height>20</Height>
								<text>${Script[EVEBot].VariableScope.Miner.TotalTrips}</text>
							</text>
							<text name='Aborts' template='EVESkin.Font.Description'>
								<X>10</X>
								<Y>55</Y>
								<Width>100</Width>
								<Height>20</Height>
								<Text>Aborts this Session:</Text>
							</text>
							<text name='Aborts_Data' template='EVESkin.Font.Value'>
								<X>150</X>
								<Y>55</Y>
								<Width>100</Width>
								<Height>20</Height>
								<text>${Script[EVEBot].VariableScope.Config.Common.OurAbortCount}</text>
							</text>
							<text name='avg_time' template='EVESkin.Font.Description'>
								<X>10</X>
								<Y>70</Y>
								<Width>175</Width>
								<Height>20</Height>
								<Text>Time For Current Trip:</Text>
							</text>
							<text name='avg_time_data' template='EVESkin.Font.Value'>
								<X>150</X>
								<Y>70</Y>
								<Width>150</Width>
								<Height>20</Height>
								<text>${ISXEVE.SecsToString[${Script[EVEBot].VariableScope.Miner.TripDuration}]}</text>
							</text>
							<text name='Average Time/Trip' template='EVESkin.Font.Description'>
								<X>10</X>
								<Y>85</Y>
								<Width>175</Width>
								<Height>20</Height>
								<Text>Average Time per Trip:</Text>
							</text>
							<text name='Average Time/Trip Data' template='EVESkin.Font.Value'>
								<X>150</X>
								<Y>85</Y>
								<Width>150</Width>
								<Height>20</Height>
								<text>${ISXEVE.SecsToString[${Script[EVEBot].VariableScope.Miner.AverageTripSeconds}]}</text>
							</text>
							<text name='Currently Training' template='EVESkin.Font.Description'>
								<X>10</X>
								<Y>115</Y>
								<Width>175</Width>
								<Height>20</Height>
								<Text>Currently Training:</Text>
							</text>
							<text name='CurrentlyTrainingDATA' template='EVESkin.Font.Value'>
								<X>150</X>
								<Y>115</Y>
								<Width>150</Width>
								<Height>20</Height>
								<text>${Script[EVEBot].VariableScope.Skills.CurrentlyTraining}</text>
							</text>
							<text name='Next to be trained' template='EVESkin.Font.Description'>
								<X>10</X>
								<Y>130</Y>
								<Width>175</Width>
								<Height>20</Height>
								<Text>Next Queued:</Text>
							</text>
							<text name='nexttobetrainedDATA' template='EVESkin.Font.Value'>
								<X>150</X>
								<Y>130</Y>
								<Width>150</Width>
								<Height>20</Height>
								<text>${Script[EVEBot].VariableScope.Skills.NextSkill}</text>
							</text>						
							<console Name="StatusConsole" template='EVESkin.Console'>
								<X>5</X>
								<Y>r120</Y>
								<Width>97.5%</Width>
								<Height>115</Height>
							</console>		
					</Tab>
					
					<Tab Name='Main'>
						<Text name='EVEBotModeLabel'>
							<X>10</X>
							<Y>10</Y>
							<Width>70</Width>
							<Height>10</Height>
							<Text>Bot Mode</Text>
						</Text>
						<combobox name='EVEBotMode'>
							<X>80</X>
							<Y>10</Y>
							<Width>250</Width> 
							<Height>15</Height> 
							<FullHeight>200</FullHeight>
							<ButtonWidth>20</ButtonWidth>
							<Items>
								<Item Value='1'>Miner</Item>
								<Item Value='2'>Hauler</Item>
								<Item Value='3'>Freighter</Item>
								<Item Value='4'>Salvager</Item>
								<Item Value='5'>Fighter</Item>
							</Items>
							<OnSelect>
								Script[EVEBot].VariableScope.Config.Common:SetBotMode[${This.SelectedItem.Value}]
								Script[EVEBot].VariableScope.Config.Common:SetBotModeName[${This.SelectedItem.Text}]
								;UIElement[Miner@EvEBotOptionsTab@EVEBot]:Hide
								;UIElement[Hauler@EvEBotOptionsTab@EVEBot]:Hide
								;UIElement[Freighter@EvEBotOptionsTab@EVEBot]:Hide
								;UIElement[Salvager@EvEBotOptionsTab@EVEBot]:Hide
								
								;UIElement[${This.SelectedItem.Text}@EvEBotOptionsTab@EVEBot]:Show
							</OnSelect>							
							<OnLoad>
								This:SetSelection[${Script[EVEBot].VariableScope.Config.Common.BotMode}]
							</OnLoad>
						</combobox>
						<Textentry name='MinimumDronesInBay'>
							<X>10</X>							
							<Y>30</Y>						
							<Width>32</Width>						
							<Height>18</Height>
							<MaxLength>2</MaxLength>
							<OnLoad>
								This:SetText[${Script[EVEBot].VariableScope.Config.Common.DronesInBay}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[EVEBot].VariableScope.Config.Common:SetDronesInBay[${Int[${This.Text}]}]
								}
							</OnChange>
						</Textentry>
						<Text name='MinimumDronesInSpaceText'>
							<X>44</X>
							<Y>30</Y>
							<Width>200</Width>
							<Height>10</Height>
							<Text>Minimum Drones in Bay</Text>
							<AutoTooltip>This will set the amount of drones you want in your drone bay.</AutoTooltip>
						</Text>					
					</Tab>
    	
					<Tab name='Miner'>
						<checkbox Name='cbIncludeVeldspar'>
							<X>10</X>
							<Y>10</Y>
							<Height>20</Height>
							<Width>100</Width>
							<Text>Mine Veldspar</Text>
							<AutoTooltip>Include Veldspar when mining?</AutoTooltip>
							<OnLoad>
								if ${Script[EVEBot].VariableScope.Config.Miner.IncludeVeldspar}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
									Script[EVEBot].VariableScope.Config.Miner:SetIncludeVeldspar[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='cbBookMarkLastPosition'>
							<X>10</X>
							<Y>30</Y>
							<Height>20</Height>
							<Width>100</Width>
							<Text>Bookmark Last Position</Text>
							<AutoTooltip>Will bookmark the last mining location when the hold fills, and return to that spot after emptying the hold.</AutoTooltip>
							<OnLoad>
								if ${Script[EVEBot].VariableScope.Config.Miner.BookMarkLastPosition}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
									Script[EVEBot].VariableScope.Config.Miner:SetBookMarkLastPosition[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='cbDistributeLasers'>
							<X>10</X>
							<Y>50</Y>
							<Height>20</Height>
							<Width>100</Width>
							<Text>Distributed Laser Targeting</Text>
							<AutoTooltip>When checked only one laser will be activated per locked asteroid.  Uncheck to focus all lasers on a single asteroid.  In general, this should be checked.</AutoTooltip>
							<OnLoad>
								if ${Script[EVEBot].VariableScope.Config.Miner.DistributeLasers}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
									Script[EVEBot].VariableScope.Config.Miner:SetDistributeLasers[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='cbUseJetCan'>
							<X>10</X>
							<Y>70</Y>
							<Height>20</Height>
							<Width>100</Width>
							<Text>Use JetCan</Text>
							<Command>Script[EVEBot].VariableScope.Config.Miner:SetUseJetCan[FALSE]</Command>
							<CommandChecked>Script[EVEBot].VariableScope.Config.Miner:SetUseJetCan[TRUE]</CommandChecked>
							<Data>${Script[EVEBot].VariableScope.Config.Miner.UseJetCan}</Data>
							<AutoTooltip>Check to jettison ore into a can while mining.  Uncheck to return to base when cargo hold is full.</AutoTooltip>
							<OnLoad>
								if ${Script[EVEBot].VariableScope.Config.Miner.UseJetCan}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
									Script[EVEBot].VariableScope.Config.Miner:SetUseJetCan[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox name='cbMiningDrones'>
							<X>10</X>
							<Y>90</Y>
							<Height>20</Height>
							<Width>100</Width>
							<Text>Use Mining Drones </text>
							<AutoTooltip>When checked mining drones will be used instead of combat drones</AutoTooltip>
							<OnLoad>
								if ${Script[EVEBot].VariableScope.Config.Miner.UseMiningDrones}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
									Script[EVEBot].VariableScope.Config.Miner:SetUseMiningDrones[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox name='cbMineAlone'>
							<X>10</X>
							<Y>110</Y>
							<Height>20</Height>
							<Width>100</Width>
							<Text>Mine Alone</text>
							<AutoTooltip>When checked you will move to another field when and if a player enters yours. (Doesn't Include Gang Members)</AutoTooltip>
							<OnLoad>
								if ${Script[EVEBot].VariableScope.Config.Miner.MineAlone}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
									Script[EVEBot].VariableScope.Config.Miner:SetMineAlone[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox name='cbStandingDetection'>
							<X>10</X>
							<Y>130</Y>
							<Height>20</Height>
							<Width>100</Width>
							<Text>Mine Alone: Standing Detection</text>
							<AutoTooltip>When checked you will move to another field when and if a player enters yours and is below the standing you set. (Doesn't Include Gang Members)</AutoTooltip>
							<OnLoad>
								if ${Script[EVEBot].VariableScope.Config.Miner.StandingDetection}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
									Script[EVEBot].VariableScope.Config.Miner:SetStandingDetection[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<combobox name='cbLowestStanding'>
							<X>210</X>
							<Y>130</Y>
							<Width>50</Width> 
							<Height>15</Height> 
							<FullHeight>200</FullHeight>
							<ButtonWidth>20</ButtonWidth>
							<Items>
								<Item Value='-10'>-10</Item>
								<Item Value='-9'>-9</Item>
								<Item Value='-8'>-8</Item>
								<Item Value='-7'>-7</Item>
								<Item Value='-6'>-6</Item>
								<Item Value='-5'>-5</Item>
								<Item Value='-4'>-4</Item>
								<Item Value='-3'>-3</Item>
								<Item Value='-2'>-2</Item>
								<Item Value='-1'>-1</Item>
								<Item Value='0'>0</Item>
								<Item Value='1'>1</Item>
								<Item Value='2'>2</Item>
								<Item Value='3'>3</Item>
								<Item Value='4'>4</Item>
								<Item Value='5'>5</Item>
								<Item Value='6'>6</Item>
								<Item Value='7'>7</Item>
								<Item Value='8'>8</Item>
								<Item Value='9'>9</Item>
								<Item Value='10'>10</Item>
							</Items>
							<OnSelect>
								Script[EVEBot].VariableScope.Config.Miner:SetStandingDetection[${This.SelectedItem.Value}]
							</OnSelect>							
							<OnLoad>
								This:SetSelection[${Script[EVEBot].VariableScope.Config.Miner.StandingDetection}]
							</OnLoad>
						</combobox>
						<combobox name='comboOreTypes'>
							<X>340</X>
							<Y>10</Y>
							<Width>150</Width> 
							<Height>20</Height> 
							<FullHeight>200</FullHeight>
							<ButtonWidth>20</ButtonWidth>
							<Items>
								<Item Value='1'>Mercoxit</Item>
								<Item Value='2'>Arkanor</Item>
								<Item Value='3'>Bistot</Item>
								<Item Value='4'>Crokite</Item>
								<Item Value='5'>Spodumain</Item>
								<Item Value='6'>Dark Ochre</Item>
								<Item Value='7'>Gneiss</Item>
								<Item Value='8'>Hedbergite</Item>
								<Item Value='9'>Hemorphite</Item>
								<Item Value='10'>Jaspet</Item>
								<Item Value='11'>Kernite</Item>
								<Item Value='12'>Omber</Item>
								<Item Value='13'>Plagioclase</Item>
								<Item Value='14'>Pyroxeres</Item>
								<Item Value='15'>Scordite</Item>
								<Item Value='16'>Veldspar</Item>
							</Items>
						</combobox>
						<listbox name='TestListBox'>
							<X>340</X>
							<Y>160</Y>
							<Width>150</Width>
							<Height>120</Height>
							<SelectMultiple>1</SelectMultiple>
							<Sort>Value</Sort>
							<Items>
								<Item Value='1'>Mercoxit</Item>
								<Item Value='2'>Arkanor</Item>
								<Item Value='3'>Bistot</Item>
								<Item Value='4'>Crokite</Item>
								<Item Value='5'>Spodumain</Item>
								<Item Value='6'>Dark Ochre</Item>
								<Item Value='7'>Gneiss</Item>
								<Item Value='8'>Hedbergite</Item>
								<Item Value='9'>Hemorphite</Item>
								<Item Value='10'>Jaspet</Item>
								<Item Value='11'>Kernite</Item>
								<Item Value='12'>Omber</Item>
								<Item Value='13'>Plagioclase</Item>
								<Item Value='14'>Pyroxeres</Item>
								<Item Value='15'>Scordite</Item>
								<Item Value='16'>Veldspar</Item>
							</Items>
						</listbox>    	
					</Tab>
					<Tab name='Combat'>
						<slider name='MinArmorPct'>
							<X>10</X>							
							<Y>10</Y>						
							<Width>40</Width>						
							<Height>18</Height>
							<Range>100</Range>
							<OnLoad>
								This:SetValue[${Script[EVEBot].VariableScope.Config.Combat.MinimumArmorPct}]
							</OnLoad>
							<OnChange>
								Script[EVEBot].VariableScope.Config.Combat:MinimumArmorPct[${Int[${This.Value}]}]
								UIElement[MinArmorPctLabel@Combat@EvEBotOptionsTab@EVEBot]:SetText["Minimum Armor: ${This.Value}"]
							</OnChange>				
						</slider>
						<Text name='MinArmorPctLabel'>
							<X>55</X>
							<Y>10</Y>
							<Width>150</Width>
							<Height>10</Height>
							<Text>Minimum Armor</Text>
							<AutoTooltip>Lowest Shield Percent allowed before docking</AutoTooltip>
						</Text>
						<slider name='MinShieldPct'>
							<X>10</X>							
							<Y>30</Y>						
							<Width>40</Width>						
							<Height>18</Height>
							<Range>100</Range>
							<OnLoad>
								This:SetValue[${Script[EVEBot].VariableScope.Config.Combat.MinimumShieldPct}]
							</OnLoad>
							<OnChange>
								Script[EVEBot].VariableScope.Config.Combat:SetMinimumShieldPct[${Int[${This.Value}]}]
								UIElement[MinShieldPctLabel@Combat@EvEBotOptionsTab@EVEBot]:SetText["Minimum Shield: ${This.Value}"]
							</OnChange>				
						</slider>
						<Text name='MinShieldPctLabel'>
							<X>55</X>
							<Y>30</Y>
							<Width>150</Width>
							<Height>10</Height>
							<Text>Minimum Shield</Text>
							<AutoTooltip>Lowest Armor Pct Allowed before Running</AutoTooltip>
						</Text>
						<Textentry name='MinimumDronesInSpace'>
							<X>10</X>							
							<Y>50</Y>						
							<Width>32</Width>						
							<Height>18</Height>
							<MaxLength>2</MaxLength>
							<OnLoad>
								This:SetText[${Script[EVEBot].VariableScope.Config.Combat.MinimumDronesInSpace}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[EVEBot].VariableScope.Config.Combat:SetMinimumDronesInSpace[${Int[${This.Text}]}]
								}
							</OnChange>
						</Textentry>
						<Text name='MinimumDronesInSpaceText'>
							<X>44</X>
							<Y>50</Y>
							<Width>200</Width>
							<Height>10</Height>
							<Text>Minimum Drones in Space</Text>
							<AutoTooltip>We will return to base when available drones falls below this number</AutoTooltip>
						</Text>
					</tab>
    	
					<Tab name='Salvager'>
					</tab>
					
					<tab name='Hauler'>
					</tab>

					<tab name='Freighter'>
					</tab>
				</Tabs>
			</tabcontrol>
		</Children>
	</window> 
</ISUI>
